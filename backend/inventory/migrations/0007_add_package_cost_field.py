# Generated by Django 4.2.7 on 2025-10-26 XX:XX

from django.db import migrations, models
from decimal import Decimal


def populate_package_cost_from_unit_cost(apps, schema_editor):
    """
    Populate package_cost field from existing unit_cost data.
    
    For existing records where unit_cost exists, calculate package_cost as:
    package_cost = unit_cost * quantity_per_package
    """
    ItemSupplier = apps.get_model('inventory', 'ItemSupplier')
    
    for item_supplier in ItemSupplier.objects.filter(unit_cost__isnull=False):
        if item_supplier.unit_cost and item_supplier.quantity_per_package:
            package_cost = item_supplier.unit_cost * item_supplier.quantity_per_package
            item_supplier.package_cost = package_cost
            item_supplier.save(update_fields=['package_cost'])


def reverse_populate_package_cost(apps, schema_editor):
    """
    Reverse migration - clear package_cost field.
    """
    ItemSupplier = apps.get_model('inventory', 'ItemSupplier')
    ItemSupplier.objects.update(package_cost=None)


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0006_itemsupplier_package_upc_itemsupplier_unit_upc'),
    ]

    operations = [
        migrations.AddField(
            model_name='itemsupplier',
            name='package_cost',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Total cost for one package from this supplier (what you actually pay)', max_digits=10, null=True),
        ),
        migrations.AlterField(
            model_name='itemsupplier',
            name='unit_cost',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Cost per individual unit from this supplier (auto-calculated from package cost)', max_digits=10, null=True),
        ),
        migrations.RunPython(
            populate_package_cost_from_unit_cost,
            reverse_populate_package_cost,
        ),
    ]
