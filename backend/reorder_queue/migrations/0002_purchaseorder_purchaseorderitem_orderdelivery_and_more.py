# Generated by Django 4.2.25 on 2025-10-29 07:57

from decimal import Decimal

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("inventory", "0012_inventoryitem_is_hazardous_inventoryitem_msds_url_and_more"),
        ("reorder_queue", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="PurchaseOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "po_number",
                    models.CharField(help_text="Purchase Order Number", max_length=50, unique=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("sent", "Sent to Supplier"),
                            ("confirmed", "Confirmed by Supplier"),
                            ("partially_received", "Partially Received"),
                            ("received", "Fully Received"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("order_date", models.DateTimeField(auto_now_add=True)),
                ("expected_delivery_date", models.DateField(blank=True, null=True)),
                ("notes", models.TextField(blank=True)),
                (
                    "estimated_total",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Estimated total cost of the order",
                        max_digits=12,
                    ),
                ),
                (
                    "actual_total",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Actual total cost after delivery",
                        max_digits=12,
                        null=True,
                    ),
                ),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_orders",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sent_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sent_orders",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="purchase_orders",
                        to="inventory.supplier",
                    ),
                ),
            ],
            options={
                "ordering": ["-order_date"],
            },
        ),
        migrations.CreateModel(
            name="PurchaseOrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "quantity_ordered",
                    models.PositiveIntegerField(
                        help_text="Quantity ordered from supplier",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "quantity_received",
                    models.PositiveIntegerField(default=0, help_text="Quantity actually received"),
                ),
                (
                    "unit_cost_ordered",
                    models.DecimalField(
                        decimal_places=4, help_text="Unit cost at time of ordering", max_digits=10
                    ),
                ),
                (
                    "unit_cost_actual",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        help_text="Actual unit cost charged",
                        max_digits=10,
                        null=True,
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "item_supplier",
                    models.ForeignKey(
                        help_text="Specific supplier relationship for this item",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="inventory.itemsupplier",
                    ),
                ),
                (
                    "purchase_order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="reorder_queue.purchaseorder",
                    ),
                ),
            ],
            options={
                "ordering": ["purchase_order", "item_supplier__item__name"],
            },
        ),
        migrations.CreateModel(
            name="OrderDelivery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("delivery_date", models.DateTimeField(default=django.utils.timezone.now)),
                ("tracking_number", models.CharField(blank=True, max_length=100)),
                ("carrier", models.CharField(blank=True, max_length=100)),
                ("receipt_notes", models.TextField(blank=True)),
                (
                    "is_complete",
                    models.BooleanField(
                        default=False,
                        help_text="Mark as complete when all items in this delivery are processed",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "purchase_order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deliveries",
                        to="reorder_queue.purchaseorder",
                    ),
                ),
                (
                    "received_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_deliveries",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-delivery_date"],
            },
        ),
        migrations.CreateModel(
            name="LeadTimeLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("order_date", models.DateTimeField(help_text="When the order was placed")),
                (
                    "expected_delivery_date",
                    models.DateField(help_text="When delivery was expected"),
                ),
                (
                    "actual_delivery_date",
                    models.DateField(help_text="When delivery actually occurred"),
                ),
                (
                    "estimated_lead_time_days",
                    models.PositiveIntegerField(help_text="Estimated lead time in business days"),
                ),
                (
                    "actual_lead_time_days",
                    models.PositiveIntegerField(help_text="Actual lead time in business days"),
                ),
                (
                    "variance_days",
                    models.IntegerField(
                        help_text="Difference between actual and estimated (positive = late)"
                    ),
                ),
                ("quantity_ordered", models.PositiveIntegerField()),
                ("quantity_received", models.PositiveIntegerField()),
                ("recorded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "item_supplier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lead_time_logs",
                        to="inventory.itemsupplier",
                    ),
                ),
                (
                    "purchase_order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lead_time_logs",
                        to="reorder_queue.purchaseorder",
                    ),
                ),
            ],
            options={
                "ordering": ["-actual_delivery_date"],
            },
        ),
        migrations.CreateModel(
            name="DeliveryItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "quantity_received",
                    models.PositiveIntegerField(
                        help_text="Quantity actually received for this item",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("is_damaged", models.BooleanField(default=False)),
                ("is_expired", models.BooleanField(default=False)),
                ("condition_notes", models.TextField(blank=True)),
                (
                    "scanned_upc",
                    models.CharField(
                        blank=True, help_text="UPC code scanned during receipt", max_length=50
                    ),
                ),
                ("scanned_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "delivery",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="reorder_queue.orderdelivery",
                    ),
                ),
                (
                    "purchase_order_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deliveries",
                        to="reorder_queue.purchaseorderitem",
                    ),
                ),
                (
                    "scanned_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="scanned_items",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["delivery", "purchase_order_item"],
            },
        ),
        migrations.AddIndex(
            model_name="purchaseorderitem",
            index=models.Index(
                fields=["purchase_order", "item_supplier"], name="reorder_que_purchas_928f39_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="purchaseorderitem",
            unique_together={("purchase_order", "item_supplier")},
        ),
        migrations.AddIndex(
            model_name="purchaseorder",
            index=models.Index(
                fields=["supplier", "status"], name="reorder_que_supplie_4da8c7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="purchaseorder",
            index=models.Index(
                fields=["status", "-order_date"], name="reorder_que_status_2ece2a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="purchaseorder",
            index=models.Index(fields=["po_number"], name="reorder_que_po_numb_4d9084_idx"),
        ),
        migrations.AddIndex(
            model_name="orderdelivery",
            index=models.Index(
                fields=["purchase_order", "-delivery_date"], name="reorder_que_purchas_7d2083_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="orderdelivery",
            index=models.Index(
                fields=["received_by", "-delivery_date"], name="reorder_que_receive_3d5883_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="leadtimelog",
            index=models.Index(
                fields=["item_supplier", "-actual_delivery_date"],
                name="reorder_que_item_su_b989e9_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="leadtimelog",
            index=models.Index(fields=["purchase_order"], name="reorder_que_purchas_a5e454_idx"),
        ),
        migrations.AddIndex(
            model_name="leadtimelog",
            index=models.Index(
                fields=["actual_delivery_date"], name="reorder_que_actual__ae9a9d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="deliveryitem",
            index=models.Index(
                fields=["delivery", "purchase_order_item"], name="reorder_que_deliver_5922c2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="deliveryitem",
            index=models.Index(
                fields=["scanned_upc", "scanned_at"], name="reorder_que_scanned_d81599_idx"
            ),
        ),
    ]
